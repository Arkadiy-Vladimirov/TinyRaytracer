Написан модельный рендерер-трассировцщик лучей (C++, CPU) со всей сопутствующей логикой.
Кокретнее, самостоятельно реализованы:
 
--lin_al.hpp: библиотека шаблонов n-мерных векторов произвольного типа со всеми основными операторами и специальными векторными операциями

--модуль graphicObjects:
	-объект камеры со всеми необходимыми настройками:
						-расположение и ориентация в пространстве
						-угол обзора fov
						-разрешение матрицы камеры
						-уровень антиалайазинга(лучей на пиксель)
	-иерархия графических объектов: графический объект ->
							->шар
							->полигон
							->полигональный объект(коллекция полигонов)
		c собственными методами взаимодействия с пересекаемым лучем и алгоритмом поиска пересечения
	-объект луча с соответствующими методами (напр. Ray::Cast())

--модуль interactonModels:
	-иерархия материалов(моделей взаимодействия с объектом). Реализованы модели взаимодействия:
						-Schlick: взаимодействие с полупрозрачным объектом с учетом:
							-коэффициентов преломления (по закону Снеллиуса)
							-спектра внутреннего поглощения света (в толще материала)
 							-фактора Френеля (посредством аппроксимации Шлика)
							-эффекта полного внутреннего отражения
						-Lambert: взаимодействие с асболютно ламбертовой поверхностью, с учетом
							-угла падения на материал и полного рассеяния (модель Ламберта)
							-спектра поверхностного полглощения света
						-SimpleEmission: взаимодействие с простым излучающим материалом (самая элементарная модель)

--main.cpp: задание сцены и рендеринг с помощью модулей, перечисленных выше

Прочее:
	-настраиваются глубина рекурсии и точность равномерного рассеяния
	-для проверки пересечения с полигонами реализован быстрый алгоритм Мёллера-Трамбора

	-ознакомиться с примерами отрендеренных изображений можно в папке resources
	-по умолчанию программа настроена на быстрый рендеринг с вытекающими потерями в точности(в папке resources лежат более "тяжелые" рендеры с высокими настройками.
	-отрендеренное изображение программа сохранит в файл ./resources/test_scene.png (чтобы не перезаписывать существующий с именем 315_vladimirov_13)

Сборка и запуск программы:
в этой папке:
	$cmake ./
	$make
	$./bin/main

Владимиров Аркадий.
 
  
